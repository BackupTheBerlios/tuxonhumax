/*
 * HdfGui.java
 *
 * Created on 4. Mai 2002, 01:24
 */

package tuxonhumax.tools.jHDF;

import java.lang.Boolean;
/**
 *
 * @author Ben96
 */
public class HdfGui extends javax.swing.JFrame {
    String hdfFileName="";
    HdfFile hdfFile = null;
    
    /** Creates new form HdfGui */
    public HdfGui() {
        hdfFileName = "";
        hdfFile = new HdfFile();
        initComponents();
        setTitle("jHDF-Tool v0.1");
        
        try {
            jbInit();
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jMenuBar2 = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        MnuOpenHdf = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        mnuClose = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        dfFileName = new javax.swing.JTextField();
        sOutput = new javax.swing.JTextArea();
        dfcrcChecksum = new javax.swing.JTextField();
        labelcrc32 = new javax.swing.JLabel();
        jlbaelheaderlenght = new javax.swing.JLabel();
        dfHLenght = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        dfSystemid1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        dfSystemID2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        dfModelType = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        dfNumBlocks = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        dfRawCount = new javax.swing.JTextField();
        
        mnuFile.setText("File");
        mnuFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileActionPerformed(evt);
            }
        });
        
        MnuOpenHdf.setText("Open HDF-File ...");
        MnuOpenHdf.setToolTipText("Opens a Dialogbox to chose a HDF-File");
        MnuOpenHdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnuOpenHdfActionPerformed(evt);
            }
        });
        
        mnuFile.add(MnuOpenHdf);
        mnuFile.add(jSeparator1);
        mnuClose.setText("Quit");
        mnuClose.setToolTipText("Quit the Application");
        mnuClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuCloseActionPerformed(evt);
            }
        });
        
        mnuFile.add(mnuClose);
        jMenuBar2.add(mnuFile);
        
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        
        setTitle("jHDF-Tool");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });
        
        jLabel1.setText("Hdf-File :");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 60, -1));
        
        getContentPane().add(dfFileName, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 280, -1));
        
        sOutput.setColumns(80);
        sOutput.setRows(25);
        sOutput.setWrapStyleWord(true);
        getContentPane().add(sOutput, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 500, 300));
        
        dfcrcChecksum.setToolTipText("CRC32 Checksum");
        dfcrcChecksum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dfcrcChecksumActionPerformed(evt);
            }
        });
        
        getContentPane().add(dfcrcChecksum, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 10, 90, -1));
        
        labelcrc32.setText("CRC32:");
        getContentPane().add(labelcrc32, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 10, -1, -1));
        
        jlbaelheaderlenght.setText("Headerlenght:");
        jlbaelheaderlenght.setToolTipText("Headerlenght (12 or 18 are supportet)");
        getContentPane().add(jlbaelheaderlenght, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 10, -1, -1));
        
        dfHLenght.setToolTipText("Headerlenght: 12 or 18 Bytes are supportet");
        getContentPane().add(dfHLenght, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 10, 30, -1));
        
        jLabel2.setText("Bytes");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 10, -1, -1));
        
        jLabel3.setText("SystemID(1):");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));
        
        getContentPane().add(dfSystemid1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 80, -1));
        
        jLabel4.setText("SystemID(2):");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 50, -1, -1));
        
        getContentPane().add(dfSystemID2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 50, 80, -1));
        
        jLabel5.setText("Modeltype:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 50, -1, -1));
        
        getContentPane().add(dfModelType, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 50, 70, -1));
        
        jLabel6.setText("Number of Blocks:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 50, -1, -1));
        
        getContentPane().add(dfNumBlocks, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 50, 90, -1));
        
        jLabel7.setText("Count of Raw-Files:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));
        
        getContentPane().add(dfRawCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, 60, -1));
        
        setJMenuBar(jMenuBar2);
        pack();
    }//GEN-END:initComponents

    private void dfcrcChecksumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dfcrcChecksumActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_dfcrcChecksumActionPerformed

    private void mneAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mneAboutActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_mneAboutActionPerformed
    
    private void MnuOpenHdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnuOpenHdfActionPerformed
        int isFile = 0;
        isFile=setFileName();
        if (isFile==1) {
            dfFileName.setText(hdfFileName);
            /* HdfFile hdfFile = new HdfFile();*/
            computeHdfInfo();
            printReport();
            String sTemp="";
            sTemp = hdfFile.toString();
            sOutput.setText(sTemp);
            filltextfields();
        }
    }//GEN-LAST:event_MnuOpenHdfActionPerformed
    
    private void mnuCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuCloseActionPerformed
        System.exit(0);
    }//GEN-LAST:event_mnuCloseActionPerformed
    
    private void mnuFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_mnuFileActionPerformed
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new HdfGui().show();
    }
    public int setFileName() {
        final javax.swing.JFileChooser fd = new javax.swing.JFileChooser();
        fd.setApproveButtonText("Open HDF-File ...");
        int returnVal = fd.showOpenDialog(null);
        fd.setVisible(true);
        if (returnVal == fd.APPROVE_OPTION) {
            hdfFileName = fd.getCurrentDirectory().getPath() +
            java.io.File.separator + fd.getSelectedFile().getName();
            dfFileName.setText(hdfFileName);
            return 1;
        }
        return 0;
    }
    
    public void computeHdfInfo() {
        hdfFile.setHdfFileName(hdfFileName);
        hdfFile.computeHdfInfo();
    }
    
    
    public void printReport() {
        System.out.print(hdfFile);
    }
    
    private void filltextfields(){
        HdfHeader h = new HdfHeader();
        h.setHdfFileName(hdfFileName);
        h.readHeader();
        int hLenght = h.getHeaderLength();
        int hChecksum = h.getHeaderChecksum();
        int mType = h.getModelType();
        int systemid1 = h.getSystemID1();
        int systemid2 = h.getSystemID2();
        int numblk = h.getNumberBlocks();
        int datalenght = h.getDataLength();
        String SmodeltypeName = h.getModelTypeName();
        
        
        /* Fill Textfields*/
        dfcrcChecksum.setText(Integer.toHexString(hChecksum));
        dfHLenght.setText(String.valueOf(hLenght));
        dfSystemid1.setText(Integer.toHexString(systemid1));
        dfSystemID2.setText(Integer.toHexString(systemid2));
        dfModelType.setText(SmodeltypeName);
        dfNumBlocks.setText(String.valueOf(numblk));
        
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenu mnuFile;
    private javax.swing.JMenuItem MnuOpenHdf;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JMenuItem mnuClose;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField dfFileName;
    private javax.swing.JTextArea sOutput;
    private javax.swing.JTextField dfcrcChecksum;
    private javax.swing.JLabel labelcrc32;
    private javax.swing.JLabel jlbaelheaderlenght;
    private javax.swing.JTextField dfHLenght;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField dfSystemid1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField dfSystemID2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField dfModelType;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField dfNumBlocks;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField dfRawCount;
    // End of variables declaration//GEN-END:variables
    
    
    
    
    /* HdfFile hdfFile     = null;*/
    private void jbInit() throws Exception {
        MnuOpenHdf.setText("Open HDF-Datei ...");
    }
    
}
